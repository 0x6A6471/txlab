open React
open Melange_bitcoin_lib

open Utils

type context_value =
  { network : Networks.t
  ; toggle_network : unit -> unit
  ; unit : string
  ; set_unit : string -> unit
  }

let init =
  { network = Networks.testnet
  ; toggle_network = (fun _ -> ())
  ; unit = "sats"
  ; set_unit = (fun _ -> ())
  }
;;

let display_context = createContext init

module Provider = struct
  include Context

  let make = provider display_context
end

module DisplayProvider = struct
  let[@react.component] make ~children =
    let initial_network =
      match Local_storage.get_item "network" with
      | Some n -> if n = "mainnet" then Networks.mainnet else Networks.testnet
      | None -> Networks.mainnet
    in
    let initial_unit =
      match Local_storage.get_item "unit" with
      | Some unit -> if unit = "btc" then "btc" else "sats"
      | None -> "sats"
    in
    let network, set_network = useState (fun _ -> initial_network) in
    let unit, set_unit = useState (fun _ -> initial_unit) in
    Js.log2 "network: " network;
    useEffect1
      (fun () ->
        begin
          match unit with
          | "btc" -> Local_storage.set_item "unit" "btc"
          | _ -> Local_storage.set_item "unit" "sats"
        end;
        None)
      [| unit |];
    let toggle_network () =
      match network = Networks.mainnet with
      | true ->
        Local_storage.set_item "network" "testnet";
        set_network (fun _ -> Networks.testnet)
      | false ->
        Local_storage.set_item "network" "mainnet";
        set_network (fun _ -> Networks.mainnet)
    in
    useEffect0 (fun () ->
      begin
        match Local_storage.get_item "network" with
        | None -> Local_storage.set_item "network" "mainnet"
        | _ -> ()
      end;
      None);
    let handle_unit_change unit = set_unit (fun _ -> unit) in
    let value = { network; toggle_network; unit; set_unit = handle_unit_change } in
    <Provider value>children</Provider>
  ;;
end
