open React

open Components
open Melange_bitcoin_lib
open Utils

type input = Psbt.psbt_tx_input
type ouput = Psbt.psbt_tx_output
type 'a global_psbt = 'a Bip174.t

type 'a psbt =
  { global_psbt : 'a global_psbt option
  ; inputs : input array
  ; outputs : ouput array
  }

type 'a action =
  | Set_hex of string
  | Set_psbt of 'a psbt
  | Toggle_network of bool
  | Select_display_unit of string
  | Set_error of string option

type 'a state =
  { hex : string
  ; psbt : 'a psbt
  ; is_mainnet : bool
  ; display_unit : string
  ; error : string option
  }

let reducer state = function
  | Set_hex hex -> { state with hex }
  | Set_psbt psbt -> { state with psbt }
  | Toggle_network is_mainnet -> { state with is_mainnet }
  | Select_display_unit display_unit -> { state with display_unit }
  | Set_error error -> { state with error }
;;

let[@react.component] make () =
  let initial_display_unit =
    match Local_storage.get_item "unit" with
    | Some unit -> if unit = "btc" then "btc" else "sats"
    | None -> "sats"
  in
  let state, dispatch =
    useReducer
      reducer
      { hex = ""
      ; psbt = { global_psbt = None; inputs = [||]; outputs = [||] }
      ; is_mainnet = true
      ; display_unit = initial_display_unit
      ; error = None
      }
  in
  let network = if state.is_mainnet then Networks.mainnet else Networks.testnet in
  let switch_label = if state.is_mainnet then "Mainnet" else "Testnet" in

  useEffect0 (fun () ->
    begin
      match Local_storage.get_item "network" with
      | Some "testnet" -> dispatch (Toggle_network false)
      | Some "mainnet" -> dispatch (Toggle_network true)
      | _ ->
        Local_storage.set_item "network" "mainnet";
        ()
    end;
    None);

  let parse_hex () =
    try
      let psbt_opts = { Types.Psbt.network = Some network; maximum_fee_rate = None } in
      let psbt = Psbt.fromHex state.hex ~psbt_opts () in
      let inputs = Psbt.getTxInputs psbt in
      let outputs = Psbt.getTxOutputs psbt in
      dispatch (Set_psbt { inputs; outputs; global_psbt = Some psbt })
    with
    | exn ->
      let error_message = Printexc.to_string exn in
      Js.log2 "Error parsing hex: " error_message;
      dispatch (Set_error (Some "Invalid transaction hex"))
  in

  useEffect1
    (fun () ->
      match state.psbt.outputs with
      | [||] -> None
      | _ ->
        parse_hex ();
        None)
    [| state.is_mainnet |];

  let handle_input_change event =
    if state.error <> None then dispatch (Set_error None);
    if state.psbt.outputs <> [||]
    then dispatch (Set_psbt { global_psbt = None; outputs = [||]; inputs = [||] });

    let value = (Event.Form.target event)##value in
    dispatch (Set_hex value)
  in

  let handle_network_change _ =
    let new_is_mainnet = not state.is_mainnet in
    if new_is_mainnet
    then Local_storage.set_item "network" "mainnet"
    else Local_storage.set_item "network" "testnet";
    dispatch (Toggle_network new_is_mainnet)
  in

  let handle_submit e =
    Event.Form.preventDefault e;
    match state.hex with
    | "" -> dispatch (Set_error (Some "A transaction hex is required"))
    | _ -> parse_hex ()
  in

  <main className="space-y-16 w-full pb-16">
    <div className="flex items-center justify-between py-2">
      <img src="/logo.svg" className="pointer-events-none select-none" />
      <Ui.Switch label=switch_label checked=state.is_mainnet set_checked=handle_network_change />
    </div>
    <form onSubmit=handle_submit>
      <div>
        <label htmlFor="hex" className="text-gray-100">(string "Transaction hex")</label>
        <div>
          <textarea id="hex"
                    name="hex"
                    type_="text"
                    autoFocus=true
                    className="mt-1 outline-0 ring-1 ring-gray-900 focus-visible:ring-gray-700 rounded-xl p-2 w-full min-h-52"
                    onChange=handle_input_change />
        </div>
      </div>
      <div className="mt-2 flex justify-between items-center">
        (match state.error with
         | None -> <div />
         | Some error ->
           <div className="inline-flex items-center gap-x-2  text-sm text-error">
             <Ui.Icon name="alert-triangle" /> (string error)
           </div>)
        <button type_="submit"
                className="rounded-full bg-gray-400 px-3 py-1.5 text-sm font-medium text-gray-950 shadow-sm hover:bg-gray-300 focus-visible:outline focus-visible:outline-1 focus-visible:outline-offset-2 focus-visible:outline-gray-400">
          (string "Submit")
        </button>
      </div>
    </form>
    <Inputs global_psbt=state.psbt.global_psbt inputs=state.psbt.inputs />
    <Outputs outputs=state.psbt.outputs
             display_unit=state.display_unit
             set_display_unit=(fun new_unit -> dispatch (Select_display_unit new_unit)) />
  </main>
;;
